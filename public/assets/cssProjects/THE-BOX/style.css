*,
*::after,
*::before {
  padding:0;
  margin: 0;
  box-sizing: border-box;
}

html {
  background: #fff;
}

:root {
  --clr-icons: #929292;
  --clr-text: #fff;
  --clr-bg-dark: #242424;
  --clr-bg-light: #3b3b3b;
  --clr-accent: #ff7600;
}

body {
  min-height: 100vh;
  margin: 1em;
  background-color: var(--clr-bg-dark);
  color: var(--clr-text);
  line-height: 1.5;
  font-family: sans-serif;
}

img {
  max-width: 100%;
}

.btn {
  position: relative;
  cursor: pointer;
  border: none;
  display: inline-block;
  outline: none;
  background: transparent;
  color: var(--clr-text);
  font-size: 1.2em;
  padding: .5em;
  z-index: 0;
  grid-column: 1 / 2;
}
.btn::after {
  content: '';
  position: absolute;
  width: 70%;
  height: 1em;
  left: 0;
  bottom: 0;
  background: var(--clr-accent);
  z-index: -1;
  transform-origin: bottom left;
  transition: transform .2s ease;
}

.btn:hover::after,
.btn:focus::after {
  
  transform: scale(1.5, 1.9);
}

.title {
  color: var(--clr-accent);
  text-transform: uppercase;
  /* margin: 0; */
  font-size: clamp(3rem, 10vw, 7rem);
  line-height: .8;
}
.location {
  color: var(--clr-icons);
  margin-bottom: 2rem;
  font-size: 1.5rem;
}
header {
  display: flex;
  justify-content: space-around;
  align-items: center;
  /* border: solid red; */
  margin: 1em 0;
  position: relative;
  z-index: 1;
}



header nav {
  flex-grow: .8;
  /* flex-shrink: 1; */
  border: solid #fff;

}

header nav > ul {
  list-style: none;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));
  /* margin-right: 20px; */
}

header nav > ul > li {
  /* text-align: right; */
  /* border: solid red; */
}



header  .nav__link {
  text-decoration: none;
  color: var(--clr-text);
  text-transform: capitalize;
  /* font-weight: 600; */
}

.secondary-images {
  border:solid;
  display: flex;
  gap: .5em;
  /* flex-wrap: wrap */
}
.secondary-images .chevron {
  width: 20px;
  filter: invert(.5);
  /* color: #ff7600; */
  /* opacity: 0.99; */
}
.secondary-image {
  /* border: red solid; */
  width: 50%;
  /* width: 200px; */
}


footer {
  margin-top: 2em;
}

footer .social-links {
  display: flex;
  gap: 2em;
}
footer img {
  width: 30px;
  filter: invert();

}

header .nav__link:hover {
  color: var(--clr-accent)
}

footer .social-link:hover,
footer .social-link:focus {
  opacity: .5;
}

@media (min-width: 800px) {
  body {
    margin: 0;
  }
  .main-grid {
    display: grid;
    grid-template-columns: 
      minmax(1em, 1fr)
      repeat(2, minmax(15rem, 35rem))
      minmax(5rem, 10rem)
      minmax(1em, 1fr)
      ;
    gap: 2em;
    /* background: red; */
    position: relative;
  }
  header {
    grid-column: 2 / 5  ;
    display: grid;
    grid-template-columns: subgrid;

  }
  .nav {
    grid-column: 2 / 4;
  }
  main {
    grid-column: 2 / -1;
    display: grid;
    /* il prend juste là où le parent existe / columns */
    grid-template-columns: subgrid;
    grid-auto-rows: min-content;
    /* grid-auto-columns: 200px;; */
    z-index: 0;
    grid-auto-flow: dense;
    /* if there is some "setup" like yours before, take it without follow ! */
    /* if you don't have "setup", you ll be the last to be put */
    /* we can also do 'align-items' like flex */
    /* align-items, justify-items: for all items */
    /* align-self, justify-self: same but just one */
  }
  main::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: -1em;
    right: -2em;
    background: var(--clr-bg-light);
    /* z-index: -2; */
    /* "after" 'grid-column' here is relited to what is relative to */
    grid-column: 3 / 5;
    /* ici, il va rien poussser car il est absolute */
    z-index: -2;
  }

  .title {
    grid-column: 1 / 3;
    /* grid-row: 1 / 2; */
    grid-row: 1 / 2;
    /* z-index: 1; */
    /* position: absolute; */
  }

  .location,
  .description {
    grid-column: 1 / 2;
    /* background: red; */
    justify-self: start;
    align-self: start;
  }
  .primary-image {
    grid-column: 2 / -1;
    /* grid-row: 2 / 3; */
    grid-row: 1 / 5;
    z-index: -1;
    object-fit: cover;
    width: min(100%, 800px);
    height: 100%;
    max-height: 500px;
  }
  .secondary-images{
    grid-column: 2 / 4;
    margin-top: 4em;
    /* background: red; */
  }
  .btn {
    /* grid-column: 1 / 2; */
    /* grid-row: 1 / 2; */
    /* background: red; */
    justify-self: start;
    align-self: start;

  }
  footer {
    grid-column: 2 / 3
  }
}

@media (min-width: 1200px) {
  main::after {
     grid-column: 3 / 4;
  }

  .nav,
  .secondary-images {
    grid-column: 2 / 3;
  }
}
